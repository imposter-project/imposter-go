{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "matchConditionObject": {
            "type": "object",
            "properties": {
                "value": { "type": ["string", "number"] },
                "operator": {
                    "type": "string",
                    "enum": ["EqualTo", "NotEqualTo", "Exists", "NotExists", "Contains", "NotContains", "Matches", "NotMatches", ""]
                }
            }
        },
        "matchCondition": {
            "oneOf": [
                { "type": ["string", "number"] },
                { "$ref": "#/definitions/matchConditionObject" }
            ]
        },
        "bodyMatchCondition": {
            "type": "object",
            "properties": {
                "value": { "type": ["string", "number"] },
                "operator": {
                    "type": "string",
                    "enum": ["EqualTo", "NotEqualTo", "Exists", "NotExists", "Contains", "NotContains", "Matches", "NotMatches", ""]
                },
                "jsonPath": { "type": "string" },
                "xPath": { "type": "string" },
                "xmlNamespaces": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                }
            }
        },
        "requestBody": {
            "type": "object",
            "allOf": [
                { "$ref": "#/definitions/bodyMatchCondition" },
                {
                    "properties": {
                        "allOf": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/bodyMatchCondition" }
                        },
                        "anyOf": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/bodyMatchCondition" }
                        }
                    }
                }
            ]
        },
        "response": {
            "type": "object",
            "properties": {
                "content": { "type": "string" },
                "staticContent": { 
                    "type": "string",
                    "description": "[DEPRECATED] Please use 'content' instead. This property will be removed in a future version."
                },
                "statusCode": { "type": "integer" },
                "file": { "type": "string" },
                "staticFile": { 
                    "type": "string",
                    "description": "[DEPRECATED] Please use 'file' instead. This property will be removed in a future version."
                },
                "fail": { "type": "string", "enum": ["EmptyResponse", "CloseConnection"] },
                "delay": {
                    "type": "object",
                    "properties": {
                        "exact": { "type": "integer" },
                        "min": { "type": "integer" },
                        "max": { "type": "integer" }
                    },
                    "additionalProperties": false
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                },
                "template": { "type": "boolean" }
            },
            "additionalProperties": false
        },
        "requestMatcher": {
            "type": "object",
            "properties": {
                "method": { "type": "string" },
                "path": { "type": "string" },
                "operation": { "type": "string" },
                "soapAction": { "type": "string" },
                "binding": { "type": "string" },
                "log": { 
                    "type": "string",
                    "description": "A log message to output when this resource or interceptor handles a request. Can contain template placeholders using ${...} syntax."
                },
                "queryParams": {
                    "type": "object",
                    "additionalProperties": { "$ref": "#/definitions/matchCondition" }
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": { "$ref": "#/definitions/matchCondition" }
                },
                "requestBody": { "$ref": "#/definitions/requestBody" },
                "formParams": {
                    "type": "object",
                    "additionalProperties": { "$ref": "#/definitions/matchCondition" }
                },
                "pathParams": {
                    "type": "object",
                    "additionalProperties": { "$ref": "#/definitions/matchCondition" }
                },
                "allOf": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["expression"],
                        "properties": {
                            "value": { "type": ["string", "number"] },
                            "operator": {
                                "type": "string",
                                "enum": ["EqualTo", "NotEqualTo", "Exists", "NotExists", "Contains", "NotContains", "Matches", "NotMatches", ""]
                            },
                            "expression": { "type": "string" }
                        }
                    }
                },
                "capture": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "enabled": { "type": "boolean" },
                            "store": { "type": "string" },
                            "key": {
                                "type": "object",
                                "properties": {
                                    "pathParam": { "type": "string" },
                                    "queryParam": { "type": "string" },
                                    "formParam": { "type": "string" },
                                    "requestHeader": { "type": "string" },
                                    "expression": { "type": "string" },
                                    "const": { "type": "string" },
                                    "requestBody": {
                                        "type": "object",
                                        "properties": {
                                            "jsonPath": { "type": "string" },
                                            "xPath": { "type": "string" },
                                            "xmlNamespaces": {
                                                "type": "object",
                                                "additionalProperties": { "type": "string" }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "additionalProperties": true
        }
    }
} 